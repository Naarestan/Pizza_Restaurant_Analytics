# -*- coding: utf-8 -*-
"""Pizza Resturants Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RmKhobZl0SBDjx9RGujvz4-_kP76_QzG

# Pizza Resturant Analytics

We're going to answer the following questions:
1. The most popular Pizza Resturant Chains and types of Pizzas
2. The State's with the most Pizza Resturants and the Average Price per State.
3. Where are Pizza Resturants Located?
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn

# read pizza data
pizza = pd.read_csv("https://raw.githubusercontent.com/rajeevratan84/data-analyst-bootcamp/master/8358_1.csv")
pizza.head()

pizza.info()

# extract interested columns
pizza_sub = pizza.copy()[['id', 'city', 'address', 'postalCode', 
                          'menus.name', 'latitude', 'longitude',
                          'menus.amountMax', 'menus.amountMin']]
pizza_sub.info()
pizza_sub.head()

"""### Most popular Resturant"""

pizza.head()

pizza_name_df_count= pizza.groupby(['name']).size().to_frame('count').reset_index()
pizza_name_df_count.sort_values(by='count', ascending=False)[:10]

"""### Most Popular Pizza Name"""

pizza_sub.head()

# drop duplicates
pizza_sub = pizza_sub.drop_duplicates(subset=['id', 'menus.name'])
pizza_sub.head()

# count the pizza names
names_of_pizza = pizza_sub['menus.name'].value_counts()
names_of_pizza

# drop duplicates
pizza_sub = pizza_sub.drop_duplicates(subset=['id', 'menus.name'])

# count the pizza names
names_of_pizza = pizza_sub['menus.name'].value_counts()

# merge `names_of_pizza` to `pizza_sub`
pizza_sub = pd.merge(pizza_sub, names_of_pizza.to_frame(),
                     left_on='menus.name', right_index=True, how='left')

pizza_sub.head()

plt.figure(figsize=(14,3))
plt.plot(names_of_pizza.head(20), linestyle='none', markersize=15, marker='o')
plt.title('Top 20 Popular Pizza', fontsize=20)
plt.xticks(rotation=90)
plt.xlabel('Pizza Name', fontsize=15)
plt.ylabel('Counts', fontsize=15)
plt.grid(alpha=.3)
plt.margins(.05)
plt.show()

"""# 2. Get the State information for each pizza restaurant"""

pizza.head()

# Download and unzip our zipfile
from urllib.request import urlopen
from zipfile import ZipFile

zipurl = 'https://raw.githubusercontent.com/rajeevratan84/data-analyst-bootcamp/master/14zpallagi.csv.zip'
zipresp = urlopen(zipurl) # Create a new file on the hard drive
tempzip = open("/tmp/tempfile.zip", "wb") # Write the contents of the downloaded file into the new file
tempzip.write(zipresp.read()) # Close the newly-created file
tempzip.close() # Re-open the newly-created file with ZipFile()
zf = ZipFile("/tmp/tempfile.zip") # Extract its contents into <extraction_path>
zf.extractall(path = '') # note that extractall will automatically create the path, left blank so it's in working directory
# close the ZipFile instance
zf.close()

# read zipcode data
zipcode = pd.read_csv('14zpallagi.csv', usecols=['STATE', 'zipcode'], dtype={'zipcode': 'str'})
zipcode.head()

# drop duplicates
zipcode = zipcode.drop_duplicates(['zipcode'])
zipcode.head()

# merge `pizza data` and `zipcode data`
pizza_merge = pd.merge(pizza_sub, zipcode, left_on='postalCode', right_on='zipcode', how='left')
pizza_merge.head()

"""### Count the number of pizza restaurants by State"""

# count the restaurants by State
counts = pizza_merge.STATE.value_counts()

# merge
pizza_clean = pd.merge(pizza_merge, counts.to_frame(), 
                       left_on='STATE', right_index=True, how='left')
pizza_clean.head()

# count the restaurants by State
counts = pizza_merge.STATE.value_counts()

# merge
pizza_clean = pd.merge(pizza_merge, counts.to_frame(), 
                       left_on='STATE', right_index=True, how='left')

# drop unused columns and missing values
pizza_clean = pizza_clean.drop(['id', 'postalCode', 'zipcode'], axis=1).dropna()

# rename columns
pizza_clean.columns = ['city', 'address', 'pizza_name',
                        'latitude', 'longitude', 
                        'menus_amountMax', 'menus_amountMin',
                        'pizza_counts', 'state', 'state_counts']

pizza_clean.head()

pizza_state = pd.DataFrame(pizza_clean['state'].value_counts().head(10))
pizza_state

import matplotlib.pyplot as plt
import seaborn 

g = seaborn.countplot(y = 'state', data = pizza_clean ,
                  order=pizza_clean.state.value_counts().iloc[:10].index)

for index, value in enumerate(list(pizza_clean.state.value_counts().iloc[:10].values)):
    g.text(value , index + .1, str(value))

"""# 3. Average Pizza Price per State"""

pizza_clean.head()

pizza_clean['average_price'] = (pizza_clean['menus_amountMax'] + pizza_clean['menus_amountMin']) / 2
pizza_clean.head()

pizza_clean.groupby('state')['average_price'].mean().reset_index().sort_values(by = 'average_price', ascending = False).head(10)

pizza_clean.groupby('city')['average_price'].mean().reset_index().sort_values(by = 'average_price', ascending = False).head(10)

"""### Let's make some Pizza Maps"""

pizza.head()

import pandas as pd

fig = go.Figure(data=go.Scattergeo(
        lon = pizza['longitude'],
        lat = pizza['latitude'],
        text = pizza['name'],
        mode = 'markers',
        #marker_color = df['cnt'],
        ))

fig.update_layout(
        title = 'Pizza Resturant Locations in the US',
        geo_scope='usa',
    )
fig.show()

"""### Pizza Resturants in each State Map"""

pizza_clean.head()

import plotly.graph_objects as go

fig = go.Figure(data=go.Choropleth(
    locations=pizza_clean['state'],
    z=pizza_clean['state_counts'].astype(float),
    locationmode='USA-states',
    colorscale='Reds',
    autocolorscale=False,
    text=pizza_clean['state'], # hover text
    marker_line_color='white', # line markers between states
    colorbar_title="Number of Resturants"
))

fig.update_layout(
    title_text='Pizza Resturants in each US State',
    geo = dict(
        scope='usa',
        projection=go.layout.geo.Projection(type = 'albers usa'),
        showlakes=True, # lakes
        lakecolor='rgb(255, 255, 255)'),
)

fig.show()

